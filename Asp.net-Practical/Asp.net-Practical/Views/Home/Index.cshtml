@model PaginatedList<Product>
@{
    ViewData["Title"] = "Product Details";
}

<h1 class="text-center">Product Details</h1>

<!-- Filter Button -->
<button type="button" class="btn btn-primary m-3" data-bs-toggle="modal" data-bs-target="#filterModal">
    Filter Data
</button>

<!-- Filter Modal -->
<div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="filterModalLabel">Filter Products</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="text" id="filterQuery" class="form-control" placeholder="Enter filter term" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="applyFilter">Apply Filter</button>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card" style="width: 100%;">
                    <img src="~/image/1303611-pro.png" class="card-img-top" alt="Product Image">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">
                            <strong>Category:</strong> @product.Category?.Name <br />
                            <strong>Brand:</strong> @product.Brand?.Name <br />
                            <strong>Price:</strong> @product.Price.ToString("C") <br />
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="1">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@i">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@Model.TotalPages">Last</a>
                </li>
            }
        </ul>
    </nav>
</div>

@section Scripts {
    <script>
        document.getElementById("applyFilter").addEventListener("click", function () {
            var query = document.getElementById("filterQuery").value;
            window.location.href = '@Url.Action("Index", "Home")' + '?query=' + query;
        });
    </script>
}
